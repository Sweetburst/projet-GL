{"ast":null,"code":"var Buffer = require('../utils/buffer');\n\nvar Mode = require('./mode');\n\nfunction ByteData(data) {\n  this.mode = Mode.BYTE;\n  this.data = new Buffer(data);\n}\n\nByteData.getBitsLength = function getBitsLength(length) {\n  return length * 8;\n};\n\nByteData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\n\nByteData.prototype.getBitsLength = function getBitsLength() {\n  return ByteData.getBitsLength(this.data.length);\n};\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8);\n  }\n};\n\nmodule.exports = ByteData;","map":{"version":3,"sources":["C:/Users/romai/Documents/Programmation_perso/Application-projet/mon-projet-ionic/node_modules/qrcode/lib/core/byte-data.js"],"names":["Buffer","require","Mode","ByteData","data","mode","BYTE","getBitsLength","length","prototype","getLength","write","bitBuffer","i","l","put","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAAlB;;AAEA,SAASE,QAAT,CAAmBC,IAAnB,EAAyB;AACvB,OAAKC,IAAL,GAAYH,IAAI,CAACI,IAAjB;AACA,OAAKF,IAAL,GAAY,IAAIJ,MAAJ,CAAWI,IAAX,CAAZ;AACD;;AAEDD,QAAQ,CAACI,aAAT,GAAyB,SAASA,aAAT,CAAwBC,MAAxB,EAAgC;AACvD,SAAOA,MAAM,GAAG,CAAhB;AACD,CAFD;;AAIAL,QAAQ,CAACM,SAAT,CAAmBC,SAAnB,GAA+B,SAASA,SAAT,GAAsB;AACnD,SAAO,KAAKN,IAAL,CAAUI,MAAjB;AACD,CAFD;;AAIAL,QAAQ,CAACM,SAAT,CAAmBF,aAAnB,GAAmC,SAASA,aAAT,GAA0B;AAC3D,SAAOJ,QAAQ,CAACI,aAAT,CAAuB,KAAKH,IAAL,CAAUI,MAAjC,CAAP;AACD,CAFD;;AAIAL,QAAQ,CAACM,SAAT,CAAmBE,KAAnB,GAA2B,UAAUC,SAAV,EAAqB;AAC9C,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKV,IAAL,CAAUI,MAA9B,EAAsCK,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAkD;AAChDD,IAAAA,SAAS,CAACG,GAAV,CAAc,KAAKX,IAAL,CAAUS,CAAV,CAAd,EAA4B,CAA5B;AACD;AACF,CAJD;;AAMAG,MAAM,CAACC,OAAP,GAAiBd,QAAjB","sourcesContent":["var Buffer = require('../utils/buffer')\nvar Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = new Buffer(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n"]},"metadata":{},"sourceType":"script"}